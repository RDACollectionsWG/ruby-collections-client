=begin
#RDA Collections API

#API Strawman for RDA Research Data Collections WG

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for CollectionsClient::MembersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MembersApi' do
  before do
    # run before each test
    @instance = CollectionsClient::MembersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembersApi' do
    it 'should create an instact of MembersApi' do
      expect(@instance).to be_instance_of(CollectionsClient::MembersApi)
    end
  end

  # unit tests for collections_id_members_get
  # Get the members in a collection
  # This request returns the list of members contained in a collection.  This may be a complete list, or if the service features include support for pagination, the cursors in the response may be used to iterate backwards and forwards through pages of partial results. Query parameters may be used to supply filtering criteria for the response. When combining filters of different types, the boolean AND will be used. When combining multiple instances of filters of the same type, the boolean OR will be used.
  # @param id Identifier for the collection
  # @param [Hash] opts the optional parameters
  # @option opts [String] :f_datatype Filter response to members matching the requested datatype.
  # @option opts [String] :f_role Filter response to members who are assigned the requested role. (Only if the collection capability supportsRoles is true).
  # @option opts [Integer] :f_index Filter response to the members assigned the requested index. (Only if the collection capability isOrdered is true).
  # @option opts [DateTime] :f_date_added Filter response to the membered added on the requestd datetime.
  # @option opts [String] :cursor cursor for iterating a prior response to this query
  # @option opts [Integer] :expand_depth expand members which are collections to this depth. may not exceed maxExpansionDepth feature setting for the service.
  # @return [MemberResultSet]
  describe 'collections_id_members_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_delete
  # Remove a collection member item.
  # Removes a member item from a collection. The response may differ depending upon whether or not the  service features include support for asynchronous actions.
  # @param id Persistent identifier for the collection
  # @param mid Identifier for the collection member
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'collections_id_members_mid_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_get
  # Get the properties of a member item in a collection
  # This request retrieves the properties of a specific member item from a collection
  # @param id Identifier for the collection
  # @param mid Identifier for the collection member item.
  # @param [Hash] opts the optional parameters
  # @return [MemberItem]
  describe 'collections_id_members_mid_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_properties_property_delete
  # Delete a named property of a member item in a collection
  # This request deletes a specific named property of a specific member item from a collection
  # @param id Identifier for the collection
  # @param mid Identifier for the collection member item.
  # @param property the name of a property to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'collections_id_members_mid_properties_property_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_properties_property_get
  # Get a named property of a member item in a collection
  # This request retrieves a specific named property of a specific member item from a collection
  # @param id Identifier for the collection
  # @param mid Identifier for the collection member item.
  # @param property the name of a property to retrieve (e.g. index)
  # @param [Hash] opts the optional parameters
  # @return [MemberItem]
  describe 'collections_id_members_mid_properties_property_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_properties_property_put
  # Update a named property of a member item in a collection
  # This request updates a specific named property of a specific member item from a collection
  # @param id Identifier for the collection
  # @param mid Identifier for the collection member item.
  # @param property the name of a property to update
  # @param content new property value
  # @param [Hash] opts the optional parameters
  # @return [MemberItem]
  describe 'collections_id_members_mid_properties_property_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_mid_put
  # Update the properties of a collection member item.
  # This request updates the properties of a collection member item.  The updated member  properties must be supplied in the body of the request. The response may differ  depending upon whether or not the  service features include support  for asynchronous actions.
  # @param id Identifier for the collection
  # @param mid Identifier for the collection member
  # @param content collection metadata
  # @param [Hash] opts the optional parameters
  # @return [MemberItem]
  describe 'collections_id_members_mid_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collections_id_members_post
  # Add a new member item to this collection
  # This request adds a new member item to a collection. If the service features include support for PID assignment to member items, then if no id is supplied for the item it  will be assigned automatically.  
  # @param id Identifier for the collection
  # @param content The properties of the member item to add to the collection. Id may be required.
  # @param [Hash] opts the optional parameters
  # @return [MemberItem]
  describe 'collections_id_members_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
